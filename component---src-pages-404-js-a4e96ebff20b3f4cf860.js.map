{"version":3,"sources":["webpack:///./src/components/not-found.js","webpack:///./src/pages/404.js","webpack:///./src/components/seo.js"],"names":["NotFound","Object","core_browser_esm","gatsby_browser_entry","query","render","data","css","_ref","gatsby_image_default","a","fluid","placeholderImage","childImageSharp","alt","_2023691627","NotFoundPage","React","Fragment","seo","title","row","type","justify","align","_404_ref","col","xs","sm","not_found","SEO","description","lang","meta","keywords","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"yQA0CeA,MApCf,WACI,OACIC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CACIC,MAAK,aAaLC,OAAQ,SAAAC,GAAI,OACRL,OAAAC,EAAA,EAAAD,CAAA,OACIM,IAAGC,GAQHP,OAAAC,EAAA,EAAAD,CAACQ,EAAAC,EAAD,CACIC,MAAOL,EAAKM,iBAAiBC,gBAAgBF,MAC7CG,IAAI,gBA1BpBR,KAAAS,8CCoBOC,UApBf,WACI,OACIf,OAAAC,EAAA,EAAAD,CAAAgB,MAAAC,SAAA,KACIjB,OAAAC,EAAA,EAAAD,CAACkB,EAAA,EAAD,CAAKC,MAAM,mBACXnB,OAAAC,EAAA,EAAAD,CAACoB,EAAA,EAAD,CACIC,KAAK,OACLC,QAAQ,SACRC,MAAM,SACNjB,IAAGkB,GAIHxB,OAAAC,EAAA,EAAAD,CAACyB,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IACb3B,OAAAC,EAAA,EAAAD,CAAC4B,EAAD,yGChBpB,SAASC,EAATtB,GAA2D,IAA5CuB,EAA4CvB,EAA5CuB,YAAaC,EAA+BxB,EAA/BwB,KAAMC,EAAyBzB,EAAzByB,KAAMC,EAAmB1B,EAAnB0B,SAAUd,EAASZ,EAATY,MACtCe,EAD+CC,EAAA9B,KAC/C6B,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACI9B,OAAAsC,EAAA,EAAAtC,CAACuC,EAAA9B,EAAD,CACI+B,eAAgB,CAAET,QAClBZ,MAAOA,EACPsB,cAAa,QAAUP,EAAKG,aAAalB,MACzCa,KAAM,CACF,CACIU,KAAI,cACJC,QAASP,GAEb,CACIQ,SAAQ,WACRD,QAASxB,GAEb,CACIyB,SAAQ,iBACRD,QAASP,GAEb,CACIQ,SAAQ,UACRD,QAAO,WAEX,CACID,KAAI,eACJC,QAAO,WAEX,CACID,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE/B,CACIH,KAAI,gBACJC,QAASxB,GAEb,CACIuB,KAAI,sBACJC,QAASP,IAGZU,OACGb,EAASc,OAAS,EACZ,CACIL,KAAI,WACJC,QAASV,EAASe,KAAT,OAEb,IAETF,OAAOd,KAKxBH,EAAIoB,aAAe,CACflB,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGfD,EAAIqB,UAAY,CACZpB,YAAaqB,IAAUC,OACvBrB,KAAMoB,IAAUC,OAChBpB,KAAMmB,IAAUE,QAAQF,IAAUG,QAClCrB,SAAUkB,IAAUE,QAAQF,IAAUC,QACtCjC,MAAOgC,IAAUC,OAAOG,YAGb1B","file":"component---src-pages-404-js-a4e96ebff20b3f4cf860.js","sourcesContent":["/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nfunction NotFound() {\n    return (\n        <StaticQuery\n            query={graphql`\n                query {\n                    placeholderImage: file(\n                        relativePath: { eq: \"not-found.png\" }\n                    ) {\n                        childImageSharp {\n                            fluid(maxWidth: 750) {\n                                ...GatsbyImageSharpFluid\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <div\n                    css={css`\n                        display: block;\n                        width: 50%;\n                        max-width: 750px;\n                        min-width: 200px;\n                        margin: auto;\n                    `}\n                >\n                    <Img\n                        fluid={data.placeholderImage.childImageSharp.fluid}\n                        alt=\"not-found\"\n                    />\n                </div>\n            )}\n        />\n    );\n}\n\nexport default NotFound;\n","/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport SEO from \"../components/seo\";\nimport Row from \"antd/es/row\";\nimport Col from \"antd/es/col\";\nimport NotFound from \"../components/not-found\";\n\nfunction NotFoundPage() {\n    return (\n        <>\n            <SEO title=\"404: Not found\" />\n            <Row\n                type=\"flex\"\n                justify=\"center\"\n                align=\"middle\"\n                css={css`\n                    height: 100%;\n                `}\n            >\n                <Col xs={24} sm={24}>\n                    <NotFound />\n                </Col>\n            </Row>\n        </>\n    );\n}\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || site.siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{ lang }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ]\n                .concat(\n                    keywords.length > 0\n                        ? {\n                              name: `keywords`,\n                              content: keywords.join(`, `),\n                          }\n                        : []\n                )\n                .concat(meta)}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n    description: ``,\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}