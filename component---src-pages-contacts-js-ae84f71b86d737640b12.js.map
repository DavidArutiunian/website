{"version":3,"sources":["webpack:///./src/pages/contacts.js","webpack:///./src/components/seo.js","webpack:///./src/components/stub.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_1__","_components_stub__WEBPACK_IMPORTED_MODULE_2__","antd_es_row__WEBPACK_IMPORTED_MODULE_3__","antd_es_col__WEBPACK_IMPORTED_MODULE_4__","Contacts","a","createElement","Fragment","title","keywords","type","justify","align","style","height","xs","sm","SEO","_ref","description","lang","meta","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Stub","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default","id","className","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fluid","placeholderImage","childImageSharp","alt","_public_static_d_1755252724_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAwBeU,UAlBf,WACI,OACIN,EAAAO,EAAAC,cAAAR,EAAAO,EAAAE,SAAA,KACIT,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAAKQ,MAAM,WAAWC,SAAU,oBAAqB,cACrDX,EAAAO,EAAAC,cAACJ,EAAA,EAAD,CACIQ,KAAK,OACLC,QAAQ,SACRC,MAAM,SACNC,MAAO,CAAEC,OAAQ,SAEjBhB,EAAAO,EAAAC,cAACH,EAAA,EAAD,CAAKY,GAAI,GAAIC,GAAI,IACblB,EAAAO,EAAAC,cAACL,EAAA,EAAD,2GCZpB,SAASgB,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMZ,EAAmBS,EAAnBT,SAAUD,EAASU,EAATV,MACtCc,EAD+CC,EAAAC,KAC/CF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACIQ,EAAAtB,EAAAC,cAACsB,EAAAvB,EAAD,CACIwB,eAAgB,CAAET,QAClBZ,MAAOA,EACPsB,cAAa,QAAUR,EAAKI,aAAalB,MACzCa,KAAM,CACF,CACIU,KAAI,cACJC,QAASP,GAEb,CACIQ,SAAQ,WACRD,QAASxB,GAEb,CACIyB,SAAQ,iBACRD,QAASP,GAEb,CACIQ,SAAQ,UACRD,QAAO,WAEX,CACID,KAAI,eACJC,QAAO,WAEX,CACID,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE/B,CACIH,KAAI,gBACJC,QAASxB,GAEb,CACIuB,KAAI,sBACJC,QAASP,IAGZU,OACG1B,EAAS2B,OAAS,EACZ,CACIL,KAAI,WACJC,QAASvB,EAAS4B,KAAT,OAEb,IAETF,OAAOd,KAKxBJ,EAAIqB,aAAe,CACflB,KAAI,KACJC,KAAM,GACNZ,SAAU,GACVU,YAAW,IAGfF,EAAIsB,UAAY,CACZpB,YAAaqB,IAAUC,OACvBrB,KAAMoB,IAAUC,OAChBpB,KAAMmB,IAAUE,QAAQF,IAAUG,QAClClC,SAAU+B,IAAUE,QAAQF,IAAUC,QACtCjC,MAAOgC,IAAUC,OAAOG,YAGb3B,6QCjDA4B,IApCf,WACI,OACIC,EAAAzC,EAAAC,cAACyC,EAAA,EAAD,CACIC,MAAK,aAWLC,OAAQ,SAAAzB,GAAI,OACRsB,EAAAzC,EAAAC,cAAAwC,EAAAzC,EAAAE,SAAA,KAAAuC,EAAAzC,EAAAC,cAAA4C,EAAA7C,EAAA,CAAA8C,GAAA,8FASIL,EAAAzC,EAAAC,cAAA,OAAA8C,UAAA,uBACIN,EAAAzC,EAAAC,cAAC+C,EAAAhD,EAAD,CACIiD,MAAO9B,EAAK+B,iBAAiBC,gBAAgBF,MAC7CG,IAAI,YAzBxBjC,KAAAkC","file":"component---src-pages-contacts-js-ae84f71b86d737640b12.js","sourcesContent":["import React from \"react\";\nimport SEO from \"../components/seo\";\nimport Stub from \"../components/stub\";\nimport Row from \"antd/es/row\";\nimport Col from \"antd/es/col\";\n\nfunction Contacts() {\n    return (\n        <>\n            <SEO title=\"Contacts\" keywords={[`David Arutiunian`, \"contacts\"]} />\n            <Row\n                type=\"flex\"\n                justify=\"center\"\n                align=\"middle\"\n                style={{ height: \"100%\" }}\n            >\n                <Col xs={24} sm={24}>\n                    <Stub />\n                </Col>\n            </Row>\n        </>\n    );\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || site.siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{ lang }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ]\n                .concat(\n                    keywords.length > 0\n                        ? {\n                              name: `keywords`,\n                              content: keywords.join(`, `),\n                          }\n                        : []\n                )\n                .concat(meta)}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n    description: ``,\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nfunction Stub() {\n    return (\n        <StaticQuery\n            query={graphql`\n                query {\n                    placeholderImage: file(relativePath: { eq: \"stub.png\" }) {\n                        childImageSharp {\n                            fluid(maxWidth: 500) {\n                                ...GatsbyImageSharpFluid\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <>\n                    <style jsx>{`\n                        .stub {\n                            display: block;\n                            width: 50%;\n                            max-width: 500px;\n                            margin: auto;\n                        }\n                    `}</style>\n                    <div className=\"stub\">\n                        <Img\n                            fluid={data.placeholderImage.childImageSharp.fluid}\n                            alt=\"stub\"\n                        />\n                    </div>\n                </>\n            )}\n        />\n    );\n}\n\nexport default Stub;\n"],"sourceRoot":""}