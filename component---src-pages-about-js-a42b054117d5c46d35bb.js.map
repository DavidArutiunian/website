{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/seo.js","webpack:///./src/components/stub.js"],"names":["About","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","React","Fragment","_components_seo__WEBPACK_IMPORTED_MODULE_1__","title","keywords","antd_es_row__WEBPACK_IMPORTED_MODULE_3__","type","justify","align","css","_ref","antd_es_col__WEBPACK_IMPORTED_MODULE_4__","xs","sm","_components_stub__WEBPACK_IMPORTED_MODULE_2__","SEO","description","lang","meta","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_1__","data","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Stub","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","placeholderImage","childImageSharp","alt","_public_static_d_1755252724_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"uLA4BeA,UApBf,WACI,OACIC,OAAAC,EAAA,EAAAD,CAAAE,MAAAC,SAAA,KACIH,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,CAAKC,MAAM,QAAQC,SAAU,oBAAqB,WAClDN,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAD,CACIC,KAAK,OACLC,QAAQ,SACRC,MAAM,SACNC,IAAGC,GAIHZ,OAAAC,EAAA,EAAAD,CAACa,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IACbf,OAAAC,EAAA,EAAAD,CAACgB,EAAA,EAAD,yGChBpB,SAASC,EAATL,GAA2D,IAA5CM,EAA4CN,EAA5CM,YAAaC,EAA+BP,EAA/BO,KAAMC,EAAyBR,EAAzBQ,KAAMd,EAAmBM,EAAnBN,SAAUD,EAASO,EAATP,MACtCgB,EAD+CC,EAAAC,KAC/CF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACIlB,OAAAC,EAAA,EAAAD,CAAC0B,EAAAC,EAAD,CACIC,eAAgB,CAAET,QAClBd,MAAOA,EACPwB,cAAa,QAAUR,EAAKI,aAAapB,MACzCe,KAAM,CACF,CACIU,KAAI,cACJC,QAASP,GAEb,CACIQ,SAAQ,WACRD,QAAS1B,GAEb,CACI2B,SAAQ,iBACRD,QAASP,GAEb,CACIQ,SAAQ,UACRD,QAAO,WAEX,CACID,KAAI,eACJC,QAAO,WAEX,CACID,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE/B,CACIH,KAAI,gBACJC,QAAS1B,GAEb,CACIyB,KAAI,sBACJC,QAASP,IAGZU,OACG5B,EAAS6B,OAAS,EACZ,CACIL,KAAI,WACJC,QAASzB,EAAS8B,KAAT,OAEb,IAETF,OAAOd,KAKxBH,EAAIoB,aAAe,CACflB,KAAI,KACJC,KAAM,GACNd,SAAU,GACVY,YAAW,IAGfD,EAAIqB,UAAY,CACZpB,YAAaqB,IAAUC,OACvBrB,KAAMoB,IAAUC,OAChBpB,KAAMmB,IAAUE,QAAQF,IAAUG,QAClCpC,SAAUiC,IAAUE,QAAQF,IAAUC,QACtCnC,MAAOkC,IAAUC,OAAOG,YAGb1B,qVCjDA2B,IAlCf,WACI,OACI5C,OAAAC,EAAA,EAAAD,CAAC6C,EAAA,EAAD,CACIC,MAAK,aAWLC,OAAQ,SAAAxB,GAAI,OACRvB,OAAAC,EAAA,EAAAD,CAAA,OACIW,IAAGC,GAQHZ,OAAAC,EAAA,EAAAD,CAACgD,EAAArB,EAAD,CACIsB,MAAO1B,EAAK2B,iBAAiBC,gBAAgBF,MAC7CG,IAAI,WAxBpB7B,KAAA8B","file":"component---src-pages-about-js-a42b054117d5c46d35bb.js","sourcesContent":["/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport SEO from \"../components/seo\";\nimport Stub from \"../components/stub\";\nimport Row from \"antd/es/row\";\nimport Col from \"antd/es/col\";\n\nfunction About() {\n    return (\n        <>\n            <SEO title=\"About\" keywords={[`David Arutiunian`, \"about\"]} />\n            <Row\n                type=\"flex\"\n                justify=\"center\"\n                align=\"middle\"\n                css={css`\n                    height: 100%;\n                `}\n            >\n                <Col xs={24} sm={24}>\n                    <Stub />\n                </Col>\n            </Row>\n        </>\n    );\n}\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || site.siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{ lang }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ]\n                .concat(\n                    keywords.length > 0\n                        ? {\n                              name: `keywords`,\n                              content: keywords.join(`, `),\n                          }\n                        : []\n                )\n                .concat(meta)}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n    description: ``,\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nfunction Stub() {\n    return (\n        <StaticQuery\n            query={graphql`\n                query {\n                    placeholderImage: file(relativePath: { eq: \"stub.png\" }) {\n                        childImageSharp {\n                            fluid(maxWidth: 500) {\n                                ...GatsbyImageSharpFluid\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <div\n                    css={css`\n                        display: block;\n                        width: 50%;\n                        max-width: 500px;\n                        min-width: 200px;\n                        margin: auto;\n                    `}\n                >\n                    <Img\n                        fluid={data.placeholderImage.childImageSharp.fluid}\n                        alt=\"stub\"\n                    />\n                </div>\n            )}\n        />\n    );\n}\n\nexport default Stub;\n"],"sourceRoot":""}